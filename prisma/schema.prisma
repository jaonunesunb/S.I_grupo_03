datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// ========================== Usu√°rios ==========================

enum TipoUsuario {
  Tecnico
  Docente
  Graduacao
  PosGraduacao
}

model Usuario {
  id                Int           @id @default(autoincrement())
  nome              String
  email             String        @unique
  password          String
  matricula         String        @unique
  departamento      Departamento? @relation(fields: [departamentoId], references: [id])
  departamentoId    Int?
  eventosCriados    Evento[]
  tipo              TipoUsuario
  subAreasInteresse SubArea[]
  createdAt         DateTime      @default(now()) @map(name: "created_at")
  updatedAt         DateTime      @updatedAt
}

// ==============================================================

model Departamento {
  id      Int       @id @default(autoincrement())
  nome    String
  area    Area      @relation(fields: [areaId], references: [id])
  areaId  Int
  Usuario Usuario[]
  Eventos Evento[]
}

// ======================== Tabela CAPES ========================

model MacroArea {
  id       Int    @id @default(autoincrement())
  tabelaId String
  nome     String @unique
  area     Area[]
}

model Area {
  id           Int            @id @default(autoincrement())
  tabelaId     String
  nome         String         @unique
  macroArea    MacroArea      @relation(fields: [macroAreaId], references: [id])
  macroAreaId  Int
  subAreas     SubArea[]
  Departamento Departamento[]
}

model SubArea {
  id       Int       @id @default(autoincrement())
  tabelaId String
  nome     String
  area     Area      @relation(fields: [areaId], references: [id])
  areaId   Int
  usuarios Usuario[]
  eventos  Evento[]
}

// ==============================================================

// =========================== Eventos ==========================

enum TipoEvento {
  EventoAcademico
  EventoCultural
}

model Evento {
  id                   Int           @id @default(autoincrement())
  nome                 String
  descricao            String
  tipoEvento           TipoEvento
  urlMaisInfo          String?
  urlInscricao         String?
  criador              Usuario       @relation(fields: [criadorId], references: [id])
  criadorId            Int
  eventoMaior          Evento?       @relation(name: "evento", fields: [eventoMaiorId], references: [id])
  eventoMaiorId        Int?
  eventosMenores       Evento[]      @relation(name: "evento")
  departamento         Departamento? @relation(fields: [departamentoId], references: [id])
  departamentoId       Int?
  subAreasRelacionadas SubArea[]
  dataInicio           DateTime
  dataFim              DateTime
  createdAt            DateTime      @default(now()) @map(name: "created_at")
}

// ==============================================================
