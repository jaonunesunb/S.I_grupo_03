datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Servidor {
  id                    Int                      @id @default(autoincrement())
  nome                  String
  email                 String                   @unique
  password              String
  foto                  String
  matricula             String?                  @unique
  departamento          String
  orientador            AtividadeUniversitaria[]
  orientadorEventoCurto EventoCurto[]
  tipo                  TipoServidor // SERVIDOR Técnico/Adm ou Docente
  areasInteresse        AreaInteresse[]
}

model Aluno {
  id                     Int                      @id @default(autoincrement())
  nome                   String
  email                  String                   @unique
  password               String
  foto                   String
  matricula              String?                  @unique
  departamento           String
  tipo                   TipoAluno // Graduação ou Pós
  areasInteresse         AreaInteresse[]
  AtividadeUniversitaria AtividadeUniversitaria[]
}

enum TipoServidor {
  Tecnico
  Docente
}

enum TipoAluno {
  Graduacao
  Pos_graduacao
}

model MacroArea {
  id             Int             @id @default(autoincrement())
  nome           String
  areas          Area[]
  areasInteresse AreaInteresse[]
}

model Area {
  id            Int             @id @default(autoincrement())
  nome          String
  macroArea     MacroArea       @relation(fields: [macroAreaId], references: [id])
  macroAreaId   Int
  subAreas      SubArea[]
  AreaInteresse AreaInteresse[]
}

model SubArea {
  id            Int             @id @default(autoincrement())
  nome          String
  area          Area            @relation(fields: [areaId], references: [id])
  areaId        Int
  eventos       Evento[]
  AreaInteresse AreaInteresse[]
}

model Evento {
  id          Int           @id @default(autoincrement())
  nome        String
  tipoEvento  String
  subArea     SubArea       @relation(fields: [subAreaId], references: [id])
  subAreaId   Int
  createdAt   DateTime      @default(now()) @map(name: "created_at")
  updatedAt   DateTime      @default(now()) @map(name: "updated_at")
  EventoCurto EventoCurto[]
}

model EventoCurto {
  id           Int      @id @default(autoincrement())
  nome         String
  dataInicio   DateTime
  dataFim      DateTime
  tipoEvento   String
  congresso    Evento?  @relation(fields: [congressoId], references: [id])
  congressoId  Int?
  orientador   Servidor @relation(fields: [orientadorId], references: [id])
  orientadorId Int
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")
}

model AtividadeUniversitaria {
  id                Int            @id @default(autoincrement())
  nome              String
  dataInicio        DateTime
  dataFim           DateTime
  tipoAtividade     String
  orientador        Servidor?      @relation(fields: [orientadorId], references: [id])
  aluno             Aluno?         @relation(fields: [alunoId], references: [id])
  orientadorId      Int?
  alunoId           Int?
  areaDeInteresse   AreaInteresse? @relation(fields: [areaDeInteresseID], references: [id])
  areaDeInteresseID Int?
  createdAt         DateTime       @default(now()) @map(name: "created_at")
  updatedAt         DateTime       @default(now()) @map(name: "updated_at")
}

model AreaInteresse {
  id                     Int                      @id @default(autoincrement())
  usuario_servidor       Servidor?                @relation(fields: [usuario_servidorID], references: [id])
  usuario_servidorID     Int?
  usuario_aluno          Aluno?                   @relation(fields: [usuario_alunoID], references: [id])
  usuario_alunoID        Int?
  macroArea              MacroArea                @relation(fields: [macroAreaId], references: [id])
  macroAreaId            Int
  area                   Area                     @relation(fields: [areaId], references: [id])
  areaId                 Int
  subArea                SubArea                  @relation(fields: [subAreaId], references: [id])
  subAreaId              Int
  AtividadeUniversitaria AtividadeUniversitaria[]
}
